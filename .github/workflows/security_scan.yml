name: Secure Web Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  SCAN_URL: http://3.129.253.217:3000
  AWS_S3_BUCKET: secure-web-scan-results
  AWS_REGION: us-east-2

jobs:
  security_scan:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsSession

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Create Output Directory
        run: mkdir -p output

      - name: Start OWASP ZAP in Daemon Mode
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:stable
          docker run -d --name zap -p 8080:8080 -v $(pwd)/output:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable zap.sh -daemon -host 0.0.0.0 -port 8080
          sleep 5  # Allow initial startup

      - name: Wait for ZAP to Start
        run: |
          echo "Waiting for ZAP to be ready..."
          for i in {1..40}; do
            if curl -s http://localhost:8080; then
              echo "✅ ZAP is ready!"
              break
            fi
            echo "⏳ Waiting for ZAP to be available ($i/40)..."
            sleep 3
            if [ $i -eq 40 ]; then
              echo "❌ ZAP failed to start"
              docker logs zap
              exit 1
            fi
          done

      - name: Run Quick Scan via ZAP API
        run: |
          echo "Starting quick scan on ${{ env.SCAN_URL }}..."
          curl "http://localhost:8080/JSON/spider/action/scan/?url=${{ env.SCAN_URL }}"
          sleep 30  # Wait for the scan to progress

      - name: Generate ZAP Report
        run: |
          echo "Generating ZAP report..."
          curl "http://localhost:8080/OTHER/core/other/htmlreport/" -o output/zap_report.html

      - name: Stop OWASP ZAP
        run: docker stop zap

      - name: Verify Scan Report Exists
        run: ls -lh output && cat output/zap_report.html || (echo "❌ Report file missing" && exit 1)

      - name: Upload Scan Results to AWS S3
        if: success()
        run: aws s3 cp output/zap_report.html s3://${{ env.AWS_S3_BUCKET }}/zap_report.html
