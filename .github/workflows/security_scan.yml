name: Secure Web Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  security_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code (Minimal Fetch)
        uses: actions/checkout@v3
        with:
          fetch-depth: 1  # Fetch only the latest commit to speed up checkout

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::615299768374:role/GitHubActionsSecurityRole
          aws-region: us-east-2

      - name: Test Connection to EC2 (Ensure GitHub Actions Can Reach the App)
        run: curl -I --max-time 5 http://172.31.14.30:3000 || echo "Failed to connect"

      - name: Set Up Python Dependencies Cache (For Snyk)
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python Dependencies (For Snyk Scan)
        run: pip install -r requirements.txt

      - name: Run OWASP ZAP Passive Scan (Optimized) üöÄ
        run: |
          docker run --rm --network host \
          -v $(pwd)/zap_output:/zap/wrk/ \
          ghcr.io/zaproxy/zaproxy:stable \
          zap.sh -cmd -quickurl http://172.31.14.30:3000 \
          -quickout /zap/wrk/zap_report.html \
          -config passiveScan.enable=true \
          -config passiveScan.maxAlertsPerRule=3 \
          -config api.debug=false \
          -config connection.requestTimeout=3000 \
          -config connection.timeoutInSecs=10 \
          -config scanner.threadPerHost=4 &

      - name: Run Snyk Dependency Scan (Optimized) ‚ö°
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=requirements.txt --fail-on=upgradable --severity-threshold=high --prune-repeated-subdependencies --json > snyk_scan.json &

      - name: Wait for Security Scans to Finish ‚è≥
        run: wait  # Ensures both scans complete before proceeding

      - name: Upload Scan Results to AWS S3 üì§
        run: |
          aws s3 cp zap_output/zap_report.html s3://secure-web-scan-results/zap_report.html --only-show-errors
          aws s3 cp snyk_scan.json s3://secure-web-scan-results/snyk_scan.json --only-show-errors
